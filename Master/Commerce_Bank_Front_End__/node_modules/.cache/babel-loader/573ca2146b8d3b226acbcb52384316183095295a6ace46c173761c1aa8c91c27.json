{"ast":null,"code":"import { LoginResponse, User } from \"../entity\";\nimport { client } from \"./client\";\nimport axios from 'axios';\nfunction checkLoggedIn() {\n  let token = localStorage.getItem(\"token\");\n  let user = localStorage.getItem(\"user\");\n  if (!token) {\n    return false;\n  }\n  try {\n    let payload = token.split(\".\")[1];\n    payload = JSON.parse(atob(payload));\n    return payload[\"exp\"] && payload[\"exp\"] > Date.now() / 1000;\n  } catch (e) {\n    return false;\n  }\n}\nfunction setToken(token) {\n  localStorage.setItem(\"token\", token);\n}\nfunction getToken() {\n  return localStorage.getItem(\"token\");\n}\nfunction logout() {\n  localStorage.removeItem(\"token\");\n}\nconst API_URL = \"http://localhost:8080/\";\nconst login = (username, password) => {\n  return axios.post(API_URL + \"token\", {\n    username,\n    password\n  }).then(response => {\n    if (response.data.username) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n      localStorage.setItem(\"token\", JSON.stringify(response.data));\n      //this.user = username;\n      //this.token = token;\n      console.log(response.data);\n    }\n    if (response.status == 200) {\n      //Sucessful Login\n      console.log(\"sucessful\");\n      console.log(response.data);\n      new LoginResponse(response.data);\n      console.log(\"end sucessful\");\n    } else {\n      console.log(\"Authentication Failed\");\n    }\n    return response.data;\n  });\n};\n\n/*\nfunction login(username, password) {\n    let params = {\n        username,\n        password\n    };\n\n\n    const data = Object.entries(params)\n        .map(([key, val]) => `${key}=${encodeURIComponent(val)}`)\n        .join('&');\n\n    return new Promise((resolve, reject) => {\n        client.post('token', data, {\n            headers: {\n                'content-type': 'application/x-www-form-urlencoded'\n            }\n        }).then(response => {\n            resolve(new LoginResponse(response.data));\n        }).catch(reason => {\n            reject(\"Authentication failed\");\n        })\n    });\n    \n}\n\n*/\n\nconst authService = {\n  login,\n  logout,\n  setToken,\n  getToken,\n  checkLoggedIn\n};\nexport { login, logout, setToken, getToken, checkLoggedIn };\nexport default authService;","map":{"version":3,"names":["LoginResponse","User","client","axios","checkLoggedIn","token","localStorage","getItem","user","payload","split","JSON","parse","atob","Date","now","e","setToken","setItem","getToken","logout","removeItem","API_URL","login","username","password","post","then","response","data","stringify","console","log","status","authService"],"sources":["/Users/camdengear/commerce_bank_front_end__/src/services/auth.service.js"],"sourcesContent":["import { LoginResponse, User } from \"../entity\";\nimport { client } from \"./client\";\nimport axios from 'axios';\n\nfunction checkLoggedIn() {\n    let token = localStorage.getItem(\"token\");\n    let user = localStorage.getItem(\"user\");\n    if (!token) {\n        return false;\n    }\n\n    try {\n        let payload = token.split(\".\")[1];\n        payload = JSON.parse(atob(payload));\n        return payload[\"exp\"] && payload[\"exp\"] > Date.now() / 1000;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction setToken(token) {\n    localStorage.setItem(\"token\", token);\n}\n\nfunction getToken() {\n    return localStorage.getItem(\"token\");\n}\n\nfunction logout() {\n    localStorage.removeItem(\"token\");\n}\n\n\n\n\n\n\n\n\nconst API_URL = \"http://localhost:8080/\";\n\n\n\nconst login = (username, password) => {\n    return axios\n      .post(API_URL + \"token\", {\n        username,\n        password,\n      })\n      .then((response) => {\n        if (response.data.username) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n          localStorage.setItem(\"token\", JSON.stringify(response.data));\n          //this.user = username;\n          //this.token = token;\n          console.log(response.data);\n\n          \n        }\n\n        if(response.status == 200){\n                //Sucessful Login\n                console.log(\"sucessful\");\n                console.log(response.data);\n                new LoginResponse(response.data);\n                \n                console.log(\"end sucessful\");\n                \n        } else {\n            console.log(\"Authentication Failed\");\n        }\n  \n        return response.data;\n      });\n\n      \n\n      \n  };\n\n\n\n/*\nfunction login(username, password) {\n    let params = {\n        username,\n        password\n    };\n\n\n    const data = Object.entries(params)\n        .map(([key, val]) => `${key}=${encodeURIComponent(val)}`)\n        .join('&');\n\n    return new Promise((resolve, reject) => {\n        client.post('token', data, {\n            headers: {\n                'content-type': 'application/x-www-form-urlencoded'\n            }\n        }).then(response => {\n            resolve(new LoginResponse(response.data));\n        }).catch(reason => {\n            reject(\"Authentication failed\");\n        })\n    });\n    \n}\n\n*/\n\nconst authService = {\n    login,\n    logout,\n    setToken,\n    getToken,\n    checkLoggedIn\n};\n\nexport {\n    login,\n    logout,\n    setToken,\n    getToken,\n    checkLoggedIn\n}\n\nexport default authService;"],"mappings":"AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,WAAW;AAC/C,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAaA,CAAA,EAAG;EACrB,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACzC,IAAIC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACvC,IAAI,CAACF,KAAK,EAAE;IACR,OAAO,KAAK;EAChB;EAEA,IAAI;IACA,IAAII,OAAO,GAAGJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjCD,OAAO,GAAGE,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,OAAO,CAAC,CAAC;IACnC,OAAOA,OAAO,CAAC,KAAK,CAAC,IAAIA,OAAO,CAAC,KAAK,CAAC,GAAGK,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI;EAC/D,CAAC,CAAC,OAAOC,CAAC,EAAE;IACR,OAAO,KAAK;EAChB;AACJ;AAEA,SAASC,QAAQA,CAACZ,KAAK,EAAE;EACrBC,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEb,KAAK,CAAC;AACxC;AAEA,SAASc,QAAQA,CAAA,EAAG;EAChB,OAAOb,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACxC;AAEA,SAASa,MAAMA,CAAA,EAAG;EACdd,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;AACpC;AASA,MAAMC,OAAO,GAAG,wBAAwB;AAIxC,MAAMC,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAClC,OAAOtB,KAAK,CACTuB,IAAI,CAACJ,OAAO,GAAG,OAAO,EAAE;IACvBE,QAAQ;IACRC;EACF,CAAC,CAAC,CACDE,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAIA,QAAQ,CAACC,IAAI,CAACL,QAAQ,EAAE;MAC1BlB,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACmB,SAAS,CAACF,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC3DvB,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACmB,SAAS,CAACF,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC5D;MACA;MACAE,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACC,IAAI,CAAC;IAG5B;IAEA,IAAGD,QAAQ,CAACK,MAAM,IAAI,GAAG,EAAC;MAClB;MACAF,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxBD,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACC,IAAI,CAAC;MAC1B,IAAI7B,aAAa,CAAC4B,QAAQ,CAACC,IAAI,CAAC;MAEhCE,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAEpC,CAAC,MAAM;MACHD,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACxC;IAEA,OAAOJ,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC;AAKN,CAAC;;AAIH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMK,WAAW,GAAG;EAChBX,KAAK;EACLH,MAAM;EACNH,QAAQ;EACRE,QAAQ;EACRf;AACJ,CAAC;AAED,SACImB,KAAK,EACLH,MAAM,EACNH,QAAQ,EACRE,QAAQ,EACRf,aAAa;AAGjB,eAAe8B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}