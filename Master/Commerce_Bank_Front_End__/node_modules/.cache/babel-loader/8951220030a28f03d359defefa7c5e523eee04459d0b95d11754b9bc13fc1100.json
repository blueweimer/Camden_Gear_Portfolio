{"ast":null,"code":"import { useNavigate } from \"react-router-dom\";\nexport const DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'];\nexport const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\nexport const EVENTS = [{\n  date: new Date(2023, 3, 10),\n  title: 'appointment'\n}, {\n  date: new Date(2023, 3, 4),\n  title: 'car wash and\\n then go somewhere else probably, Idk, something long'\n}];\n\n//CALLING FROM TABLE\n\nconst history = useNavigate();\nconst [data, setData] = useState(null);\nconst UI_URL = \"http://localhost:5173/\";\nconst BE_URL = \"http://localhost:8080/\";\nconst response = fetch(\"http://localhost:8080/getTypeById/1\");\nfunction getSubstring(str, start, end) {\n  const char1 = str.indexOf(start) + 1;\n  const char2 = str.lastIndexOf(end);\n  return str.substring(char1, char2);\n}\nconst savingsGoalUser = window.localStorage.getItem('name');\nconst savingsGoalUrl = \"http://localhost:8080/getSavingsGoalByUId/\" + savingsGoalUser;\nvar savingsGoalAddress = fetch(savingsGoalUrl).then(response => {\n  const savingsGoalOut = response.json();\n  console.log(savingsGoalOut.then(data => {\n    console.log(data);\n    const savingsGoalOutput = JSON.stringify(data);\n    const savingsGoalTitle = getSubstring(savingsGoalOutput, '{', ':');\n    const savingsGoalValue = getSubstring(savingsGoalOutput, ':', '}');\n    localStorage.setItem(savingsGoalTitle.split('\"')[1], savingsGoalValue.split('\"')[1]);\n  }));\n}) //prints to console\n.then(data => {\n  setData(data);\n}).then(user => {});\nconst savingsGoalPrintAddress = () => {\n  savingsGoalAddress.then(a => {\n    console.log(a);\n  });\n};","map":{"version":3,"names":["useNavigate","DAYS","MONTHS","EVENTS","date","Date","title","history","data","setData","useState","UI_URL","BE_URL","response","fetch","getSubstring","str","start","end","char1","indexOf","char2","lastIndexOf","substring","savingsGoalUser","window","localStorage","getItem","savingsGoalUrl","savingsGoalAddress","then","savingsGoalOut","json","console","log","savingsGoalOutput","JSON","stringify","savingsGoalTitle","savingsGoalValue","setItem","split","user","savingsGoalPrintAddress","a"],"sources":["/Users/camdengear/Documents/GitHub/Commerce_Bank/Master/Commerce_Bank_Front_End__/src/views/calendar/calendarComponents/conts.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\n\nexport const DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'];\n\nexport const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n\nexport const EVENTS = [\n    {date: new Date(2023, 3, 10), title: 'appointment'},\n    {date: new Date(2023, 3, 4), title: 'car wash and\\n then go somewhere else probably, Idk, something long'}\n]\n\n\n//CALLING FROM TABLE\n\n    const history = useNavigate();\n    const [data, setData] = useState(null);\n\n    const UI_URL = \"http://localhost:5173/\";\n    const BE_URL = \"http://localhost:8080/\";\n\n    const response = fetch(\"http://localhost:8080/getTypeById/1\");\n\n    function getSubstring(str, start, end) {\n      const char1 =  str.indexOf(start) + 1;\n      const char2 =  str.lastIndexOf(end);\n      return str.substring(char1, char2);\n    }\n\n   const savingsGoalUser = window.localStorage.getItem('name');\n   const savingsGoalUrl = \"http://localhost:8080/getSavingsGoalByUId/\" + savingsGoalUser;\n   var savingsGoalAddress = fetch(savingsGoalUrl)\n      .then((response) => {\n      const savingsGoalOut = response.json();\n      console.log(savingsGoalOut.then((data)=>{\n        console.log(data);\n        const savingsGoalOutput = JSON.stringify(data);\n        const savingsGoalTitle = getSubstring(savingsGoalOutput, '{', ':');\n        const savingsGoalValue = getSubstring(savingsGoalOutput, ':', '}');\n        localStorage.setItem(savingsGoalTitle.split('\"')[1], savingsGoalValue.split('\"')[1]);\n      }));\n      }) //prints to console\n      .then((data) => {\n        setData(data);\n      })\n      .then((user) => {\n      });\n\n   const savingsGoalPrintAddress = () => {\n      savingsGoalAddress.then((a) => {\n        console.log(a);\n      });\n    };\n\n\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;AAEtE,OAAO,MAAMC,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AAE3G,OAAO,MAAMC,MAAM,GAAG,CAClB;EAACC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAa,CAAC,EACnD;EAACF,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;EAAEC,KAAK,EAAE;AAAqE,CAAC,CAC7G;;AAGD;;AAEI,MAAMC,OAAO,GAAGP,WAAW,EAAE;AAC7B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;AAEtC,MAAMC,MAAM,GAAG,wBAAwB;AACvC,MAAMC,MAAM,GAAG,wBAAwB;AAEvC,MAAMC,QAAQ,GAAGC,KAAK,CAAC,qCAAqC,CAAC;AAE7D,SAASC,YAAYA,CAACC,GAAG,EAAEC,KAAK,EAAEC,GAAG,EAAE;EACrC,MAAMC,KAAK,GAAIH,GAAG,CAACI,OAAO,CAACH,KAAK,CAAC,GAAG,CAAC;EACrC,MAAMI,KAAK,GAAIL,GAAG,CAACM,WAAW,CAACJ,GAAG,CAAC;EACnC,OAAOF,GAAG,CAACO,SAAS,CAACJ,KAAK,EAAEE,KAAK,CAAC;AACpC;AAED,MAAMG,eAAe,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;AAC3D,MAAMC,cAAc,GAAG,4CAA4C,GAAGJ,eAAe;AACrF,IAAIK,kBAAkB,GAAGf,KAAK,CAACc,cAAc,CAAC,CAC1CE,IAAI,CAAEjB,QAAQ,IAAK;EACpB,MAAMkB,cAAc,GAAGlB,QAAQ,CAACmB,IAAI,EAAE;EACtCC,OAAO,CAACC,GAAG,CAACH,cAAc,CAACD,IAAI,CAAEtB,IAAI,IAAG;IACtCyB,OAAO,CAACC,GAAG,CAAC1B,IAAI,CAAC;IACjB,MAAM2B,iBAAiB,GAAGC,IAAI,CAACC,SAAS,CAAC7B,IAAI,CAAC;IAC9C,MAAM8B,gBAAgB,GAAGvB,YAAY,CAACoB,iBAAiB,EAAE,GAAG,EAAE,GAAG,CAAC;IAClE,MAAMI,gBAAgB,GAAGxB,YAAY,CAACoB,iBAAiB,EAAE,GAAG,EAAE,GAAG,CAAC;IAClET,YAAY,CAACc,OAAO,CAACF,gBAAgB,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAEF,gBAAgB,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACtF,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;AAAA,CACFX,IAAI,CAAEtB,IAAI,IAAK;EACdC,OAAO,CAACD,IAAI,CAAC;AACf,CAAC,CAAC,CACDsB,IAAI,CAAEY,IAAI,IAAK,CAChB,CAAC,CAAC;AAEL,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EACnCd,kBAAkB,CAACC,IAAI,CAAEc,CAAC,IAAK;IAC7BX,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC;EAChB,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}